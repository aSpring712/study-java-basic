package class1;

/**
 * Class Start 2
 *
 * 클래스가 필요한 이유
 * 문제 - 학생 정보 출력 프로그램 만들기 (배열 사용)
 *
 * @author Kwon Bomi / GitHub: aSpring712
 * @since 2025-04-02
 * @version 1.0
 */
public class ClassStart2 {

	/*
	* 두 명의 학생 정보를 출력하는 프로그램 작성. 각 학생은 이름, 나이, 성적을 가지고 있다.
	* 1. 첫 번째 학생의 이름은 "학생1", 나이는 15, 성적은 90
	* 2. 두 번째 학생의 이름은 "학생2", 나이는 16, 성적은 80
	* 3. 각 학생의 정보를 다음과 같은 형식 으로 출력해야 함: "이름: [이름] 나이: [나이] 성적: [성적]"
	* 4. 변수를 사용해서 학생 정보를 저장하고 변수를 사용해서 학생 정보를 출력해야 합니다.
	* */

	public static void main(String[] args) {

//		String[][] studentArr = {
//				{"학생1", "15", "90"},
//				{"학생2", "16", "80"}
//		};
//
//		String[] strArr = {"이름", "나이", "성적"};
//
//		for (int i = 0; i < studentArr.length; i++) {
//			for (int j = 0; j < strArr.length; j++) {
//				System.out.print(strArr[j] + ": " + studentArr[i][j] + " ");
//			}
//			System.out.println();
//		}

		String[] studentNames = {"학생1", "학생2"};
		int[] studentAges = {15, 16};
		int[] studentGrades = {90, 80};

		for (int i = 0; i < studentNames.length; i++) {
			System.out.println("이름: " + studentNames[i] + " 나이: " + studentAges[i] + " 성적: " + studentGrades[i]);
		}
	}

	/*
	* 배열을 사용한 덕분에 학생이 추가되어도 배열에 학생의 데이터만 추가하면 된다. 이제 변수를 더 추가하지 않아도 되고,
	* 출력 부분의 코드도 그대로 유지할 수 있다.
	*
	* **배열 사용의 한계**
	* 배열을 사용해서 코드 변경을 최소화하는데는 성공했지만, 한 학생의 데이터가 studentsNames[], studentAges[], studentGrades[]라는
	* 3개의 배열에 나누어져 있다. 따라서 데이터를 변경할 때 매우 조심해서 작업해야 한다. 예를 들어서 학생 2의 데이터를 제거하려면 각각의 배열마다
	* 학생 2의 요소를 정확하게 찾아서 제거해주어야 한다.
	*
	* 한 학생의 데이터가 3개의 배열에 나누어져 있기 때문에 3개의 배열을 각각 변경해야 한다. 그리고 한 학생의 데이터를 관리하기 위해 3개의 배열의
	* 인덱스 순서를 항상 정확하게 맞추어야 한다. 이렇게 하면 특정 학생의 데이터를 변경할 때 실수할 가능성이 매우 높다.
	* 이 코드는 컴퓨터가 볼 때는 아무 문제가 없지만, 사람이 관리하기에는 종은 코드가 아니다.
	*
	* ### 정리
	* 지금처럼 이름, 나이, 성적을 각각 따로 나누어서 관리하는 것은 사람이 관리하기 좋은 방식이 아니다.
	* 사람이 관리하기 좋은 방식은 학생이라는 개념을 하나로 묶는 것이다. 그리고 각각의 학생 별로 본인의 이름, 나이, 성적을 관리하는 것이다.
	* */
}